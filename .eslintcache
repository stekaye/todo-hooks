[{"/Users/stephenkaye/repos/REACT/todos-hooks/src/reportWebVitals.js":"1","/Users/stephenkaye/repos/REACT/todos-hooks/src/TodoApp.js":"2","/Users/stephenkaye/repos/REACT/todos-hooks/src/TodoList.js":"3","/Users/stephenkaye/repos/REACT/todos-hooks/src/App.js":"4","/Users/stephenkaye/repos/REACT/todos-hooks/src/TodoForm.js":"5","/Users/stephenkaye/repos/REACT/todos-hooks/src/hooks/useInputState.js":"6","/Users/stephenkaye/repos/REACT/todos-hooks/src/TodoItem.js":"7","/Users/stephenkaye/repos/REACT/todos-hooks/src/hooks/useToggleState.js":"8","/Users/stephenkaye/repos/REACT/todos-hooks/src/EditTodoForm.js":"9","/Users/stephenkaye/repos/REACT/todos-hooks/src/hooks/useTodoState.js":"10","/Users/stephenkaye/repos/REACT/todos-hooks/src/hooks/useLocalStorageState.js":"11","/Users/stephenkaye/repos/REACT/todos-hooks/src/contexts/todos.context.js":"12"},{"size":362,"mtime":1611311769145,"results":"13","hashOfConfig":"14"},{"size":1070,"mtime":1611742891991,"results":"15","hashOfConfig":"14"},{"size":716,"mtime":1611743231057,"results":"16","hashOfConfig":"14"},{"size":122,"mtime":1611331576341,"results":"17","hashOfConfig":"14"},{"size":849,"mtime":1611742862900,"results":"18","hashOfConfig":"14"},{"size":296,"mtime":1611321079788,"results":"19","hashOfConfig":"14"},{"size":1655,"mtime":1611743319430,"results":"20","hashOfConfig":"14"},{"size":246,"mtime":1611323070144,"results":"21","hashOfConfig":"14"},{"size":1392,"mtime":1611742325640,"results":"22","hashOfConfig":"14"},{"size":861,"mtime":1611740926348,"results":"23","hashOfConfig":"14"},{"size":1120,"mtime":1611333270027,"results":"24","hashOfConfig":"14"},{"size":432,"mtime":1611742574710,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"3p6spy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stephenkaye/repos/REACT/todos-hooks/src/reportWebVitals.js",[],["53","54"],"/Users/stephenkaye/repos/REACT/todos-hooks/src/TodoApp.js",[],"/Users/stephenkaye/repos/REACT/todos-hooks/src/TodoList.js",["55"],"import React, { useContext } from 'react';\nimport TodoItem from './TodoItem';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport {TodosContext} from './contexts/todos.context';\n\nfunction TodoList() {\n  const {todos} = useContext(TodosContext);\n  \n  if (todos.length) \n    return (\n      <Paper>\n        <List>\n          {todos.map((todo, index) => (\n            <React.Fragment key={index}>\n              <TodoItem {...todo} key={todo.id}/>\n              {index < todos.length - 1 && <Divider/>}\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n    );\n    return null;\n}\n\nexport default TodoList;\n","/Users/stephenkaye/repos/REACT/todos-hooks/src/App.js",[],"/Users/stephenkaye/repos/REACT/todos-hooks/src/TodoForm.js",[],"/Users/stephenkaye/repos/REACT/todos-hooks/src/hooks/useInputState.js",[],"/Users/stephenkaye/repos/REACT/todos-hooks/src/TodoItem.js",[],"/Users/stephenkaye/repos/REACT/todos-hooks/src/hooks/useToggleState.js",[],"/Users/stephenkaye/repos/REACT/todos-hooks/src/EditTodoForm.js",[],"/Users/stephenkaye/repos/REACT/todos-hooks/src/hooks/useTodoState.js",[],"/Users/stephenkaye/repos/REACT/todos-hooks/src/hooks/useLocalStorageState.js",["56"],"import {useState, useEffect} from 'react';\n\nfunction useLocalStorageState(key, defaultValue) {\n\n  //Make piece of state based of value in local storage (or default value).\n  // Use function in useState to figure out what to initialise state as. Here, based on what is in local storage.\n  const [state, setState] = useState(() => {\n    let val;\n    try {\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultValue));\n    }\n    catch (e) {\n      val = defaultValue;\n    }\n    return val;\n  })\n\n  //Use useEffect to update local storage whenever piece of stage changes\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state))\n  }, [state])\n  return [state, setState];\n}\n\nexport default useLocalStorageState;\n\n// USECASE\n// const [todos, setTodos] = useLocalStorageState('todos\", [])\n// const [mood, setMood] = useLocalStorageState('mood, 'happy)\n// Therefore, mood will be set to happy initially in local storage. \n// If we had a button we could add an onClick event and call setMood and change it to something else.\n// Use exactly the same as if it came directly from useState()\n","/Users/stephenkaye/repos/REACT/todos-hooks/src/contexts/todos.context.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":null,"fatal":true,"severity":2,"message":"61","line":17,"column":48},{"ruleId":"62","severity":1,"message":"63","line":21,"column":6,"nodeType":"64","endLine":21,"endColumn":13,"suggestions":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"Parsing error: Unexpected token\n\n  15 |           {todos.map((todo, index) => (\n  16 |             <React.Fragment key={index}>\n> 17 |               <TodoItem {...todo} key={todo.id/>\n     |                                                ^\n  18 |               {index < todos.length - 1 && <Divider/>}\n  19 |             </React.Fragment>\n  20 |           ))}","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [key, state]",{"range":"71","text":"72"},[671,678],"[key, state]"]